- hosts: all
  become: yes

  vars_files:
    - vars.yml

  pre_tasks:
    - name: Installing packages
      package:
        name: "{{ openssl_packages }}"
        state: present

    - name: Create Docker configuration directories
      file:
        path: "{{ item }}"
        state: "directory"
        owner: "root"
        group: "root"
        mode: "0755"
      loop:
        - "/etc/docker"
        - "/etc/systemd/system/docker.service.d"
        - "/var/lib/postgresql/data"

  tasks:
    - name: Create a tempdir
      file:
        state: directory
        path: "{{ dds_temp_path }}"
      tags: skip_this_rule

    - name: Remove passphrase file, if it exists
      file:
        state: absent
        path: "{{ dds_passphrase_file }}"
      tags: skip_this_rule

    - name: Create passphrase file
      file:
        state: touch
        path: "{{ dds_passphrase_file }}"
        mode: 0644

    - name: Add passphrase to the file
      lineinfile:
        dest: "{{ dds_passphrase_file }}"
        line: "{{ dds_passphrase }}"

    - name: Check if cacert is present
      stat: path={{ dds_server_cert_path }}/ca.pem
      register: cacert 

    - name: Generate ca-key.pem
      command: "openssl genrsa -aes256 -passout file:{{ dds_passphrase_file }} -out {{ dds_temp_path }}/ca-key.pem 4096"
      when: not cacert.stat.exists

    - name: Generate ca certificate  
      command: "{{ generate_ca_certificate }}"
      when: not cacert.stat.exists

    - name: Check if servercert is present
      stat: path={{ dds_server_cert_path }}/server-cert.pem
      register: servercert

    - include: generate_server_certs.yml
      when: not servercert.stat.exists

    - name: Check if clientcert is present
      stat: path={{ dds_client_cert_path }}/cert.pem
      register: clientcert

    - include: generate_client_certs.yml
      when: not clientcert.stat.exists

    - name: Remove the temp directory
      file:
        state: absent
        path: "{{ dds_temp_path }}"

    - name: Install shell script for setting DOCKER env vars
      template:
        src: "../../templates/docker_env.j2"
        dest: "{{ dds_env_shell_path }}/docker_env.sh"
        mode: 0755
      when: dds_install_shell
      tags: skip_this_rule

    - name: Force systemd to reread configs
      systemd:
        daemon_reload: yes
